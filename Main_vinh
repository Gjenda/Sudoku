import tkinter as tk
import winsound
import pandas as pd
import random

from Solver import Solver
from GUI_v2 import GUI


class MainCode():
    
    def __init__(self):
        self.root = tk.Tk()
        self.root.geometry("500x400")
        self.root.title("Sudoku Game")
        self.root.configure(bg='lightblue')
        
        self.button_height = 2
        self.button_width = 15

        self.sudoku = {}
        self.solved_sudoku = {}
        self.create_widgets(self.root)
        
        self.easy_sudoku = {(1,1,1):0 ,
        (2,1,1):0 ,
        (3,1,1):0 ,
        (1,2,1):6 ,
        (2,2,1):4 ,
        (3,2,1):9 ,
        (1,3,1):5 ,
        (2,3,1):3 ,
        (3,3,1):1 ,
        (1,1,2):3 ,
        (2,1,2):1 ,
        (3,1,2):0 ,
        (1,2,2):0 ,
        (2,2,2):0 ,
        (3,2,2):0 ,
        (1,3,2):0 ,
        (2,3,2):8 ,
        (3,3,2):0 ,
        (1,1,3):5 ,
        (2,1,3):0 ,
        (3,1,3):9 ,
        (1,2,3):8 ,
        (2,2,3):0 ,
        (3,2,3):1 ,
        (1,3,3):6 ,
        (2,3,3):7 ,
        (3,3,3):0 ,
        (1,1,4):2 ,
        (2,1,4):1 ,
        (3,1,4):0 ,
        (1,2,4):0 ,
        (2,2,4):9 ,
        (3,2,4):6 ,
        (1,3,4):7 ,
        (2,3,4):0 ,
        (3,3,4):0 ,
        (1,1,5):0 ,
        (2,1,5):4 ,
        (3,1,5):0 ,
        (1,2,5):2 ,
        (2,2,5):0 ,
        (3,2,5):8 ,
        (1,3,5):6 ,
        (2,3,5):0 ,
        (3,3,5):1 ,
        (1,1,6):3 ,
        (2,1,6):0 ,
        (3,1,6):6 ,
        (1,2,6):0 ,
        (2,2,6):0 ,
        (3,2,6):0 ,
        (1,3,6):0 ,
        (2,3,6):8 ,
        (3,3,6):0 ,
        (1,1,7):1 ,
        (2,1,7):0 ,
        (3,1,7):5 ,
        (1,2,7):9 ,
        (2,2,7):0 ,
        (3,2,7):0 ,
        (1,3,7):3 ,
        (2,3,7):0 ,
        (3,3,7):0 ,
        (1,1,8):9 ,
        (2,1,8):0 ,
        (3,1,8):0 ,
        (1,2,8):0 ,
        (2,2,8):0 ,
        (3,2,8):3 ,
        (1,3,8):1 ,
        (2,3,8):6 ,
        (3,3,8):0 ,
        (1,1,9):7 ,
        (2,1,9):0 ,
        (3,1,9):0 ,
        (1,2,9):0 ,
        (2,2,9):0 ,
        (3,2,9):0 ,
        (1,3,9):0 ,
        (2,3,9):0 ,
        (3,3,9):8 }
        self.hard_sudoku = {(1,1,1):0 ,
        (2,1,1):0 ,
        (3,1,1):0 ,
        (1,2,1):0 ,
        (2,2,1):0 ,
        (3,2,1):0 ,
        (1,3,1):5 ,
        (2,3,1):1 ,
        (3,3,1):3 ,
        (1,1,2):0 ,
        (2,1,2):0 ,
        (3,1,2):0 ,
        (1,2,2):3 ,
        (2,2,2):1 ,
        (3,2,2):0 ,
        (1,3,2):0 ,
        (2,3,2):0 ,
        (3,3,2):0 ,
        (1,1,3):0 ,
        (2,1,3):1 ,
        (3,1,3):0 ,
        (1,2,3):0 ,
        (2,2,3):5 ,
        (3,2,3):0 ,
        (1,3,3):2 ,
        (2,3,3):4 ,
        (3,3,3):9 ,
        (1,1,4):0 ,
        (2,1,4):4 ,
        (3,1,4):9 ,
        (1,2,4):0 ,
        (2,2,4):8 ,
        (3,2,4):0 ,
        (1,3,4):6 ,
        (2,3,4):0 ,
        (3,3,4):1 ,
        (1,1,5):0 ,
        (2,1,5):5 ,
        (3,1,5):0 ,
        (1,2,5):0 ,
        (2,2,5):0 ,
        (3,2,5):1 ,
        (1,3,5):0 ,
        (2,3,5):0 ,
        (3,3,5):3 ,
        (1,1,6):0 ,
        (2,1,6):0 ,
        (3,1,6):1 ,
        (1,2,6):0 ,
        (2,2,6):0 ,
        (3,2,6):0 ,
        (1,3,6):4 ,
        (2,3,6):7 ,
        (3,3,6):0 ,
        (1,1,7):0 ,
        (2,1,7):7 ,
        (3,1,7):8 ,
        (1,2,7):4 ,
        (2,2,7):2 ,
        (3,2,7):0 ,
        (1,3,7):0 ,
        (2,3,7):0 ,
        (3,3,7):0 ,
        (1,1,8):0 ,
        (2,1,8):0 ,
        (3,1,8):0 ,
        (1,2,8):0 ,
        (2,2,8):9 ,
        (3,2,8):7 ,
        (1,3,8):0 ,
        (2,3,8):0 ,
        (3,3,8):4 ,
        (1,1,9):0 ,
        (2,1,9):2 ,
        (3,1,9):4 ,
        (1,2,9):0 ,
        (2,2,9):0 ,
        (3,2,9):0 ,
        (1,3,9):7 ,
        (2,3,9):0 ,
        (3,3,9):5 }




    def create_widgets(self, root):
        
        self.blankspace1 = tk.Label(root, text="")
        self.blankspace1.configure(bg='lightblue')
        self.blankspace1.pack()
        
        self.label1 = tk.Label(root,text="Welcome to the SUDOKU Game !", font = "Helvetica 16 bold" )
        self.label1.configure(bg='lightblue')
        self.label1.pack(side = tk.TOP)
        
        self.blankspace2 = tk.Label(root, text="")
        self.blankspace2.configure(bg='lightblue')
        self.blankspace2.pack()     
        
        self.blankspace3 = tk.Label(root, text="")
        self.blankspace3.configure(bg='lightblue')
        self.blankspace3.pack()   
        
        self.label2 = tk.Label(root, text="Choose a level : ", font = "Helevetica 13 bold")
        self.label2.configure(bg='lightblue')
        self.label2.pack(side = tk.TOP)     
        
        self.blankspace4 = tk.Label(root, text="")
        self.blankspace4.configure(bg='lightblue')
        self.blankspace4.pack()             
        
        self.blankspace7 = tk.Label(root, text="")
        self.blankspace7.configure(bg='lightblue')
        self.blankspace7.pack()
        
        self.easy_button = tk.Button(root, text = "EASY", height = self.button_height, width = self.button_width, font = "Calibri 11 bold")
        self.easy_button.pack()
        self.easy_button.bind('<Button-1>', self.easy_game)
        
        self.blankspace5 = tk.Label(root, text="")
        self.blankspace5.configure(bg='lightblue')
        self.blankspace5.pack()
        
        self.blankspace6 = tk.Label(root, text="")
        self.blankspace6.configure(bg='lightblue')
        self.blankspace6.pack()
        
        self.hard_button = tk.Button(root, text = "HARD", height = self.button_height, width = self.button_width, font = "Calibri 11 bold")
        self.hard_button.pack()
        self.hard_button.bind('<Button-1>', self.hard_game)

        
    
    def easy_game(self,event):
        self.initiate_game(1)
        winsound.Beep(640, 500)
    
        
    def hard_game(self, event):
        self.initiate_game(2)
        winsound.Beep(840, 500)
        
    def create_dictionary(self):
        k = 0
        for y in range (1,10):    # Y axis => rows
                for z in range (1,4):    # Z boxes (advancing horizontally)
                        for x in range (1,4):    # X axis columns
                                if y <= 3:
                                        self.sudoku[(x,y,z)] = int(self.initial_values[k])
                                elif y <= 6:
                                        self.sudoku[(x,y-3,z+3)] = int(self.initial_values[k])
                                else:
                                        self.sudoku[(x,y-6,z+6)] = int(self.initial_values[k])
                                k += 1

    def initiate_game(self, k):
        if k == 1:
            
            nRowsRead = 100  #an integer, or specify 'None' if want to read whole file
            df1 = pd.read_csv(r"C:\VINH\INSA\2A\COURS\INFORMATICS\S2\PROJECT\MAIN_CODES\sudoku_1m.csv", delimiter=',', nrows = nRowsRead)   #REMOVE - need to fix directory and file name
            df1.dataframeName = 'sudoku_1m.csv'
            nRow, nCol = df1.shape
        elif k == 2:
            
            nRowsRead = None  #an integer, or specify 'None' if want to read whole file
            df1 = pd.read_csv(r"C:\VINH\INSA\2A\COURS\INFORMATICS\S2\PROJECT\MAIN_CODES\sudoku_1m.csv", delimiter=',', nrows = nRowsRead)   #REMOVE - need to fix directory and file name
            df1.dataframeName = 'sudoku_1m.csv'
            nRow, nCol = df1.shape
            
        
        """
        #put sudoku from file into self.sudoku
        """
        #row = random.randint(0, nRow - 1)
        row = 2
        self.initial_values = df1["quizzes"][row]   #its a list, with all values of the sudoku board, going left to right for each row
        #self.create_dictionary()
    
    
        self.solver = Solver(self.sudoku)
        self.solved_sudoku = self.solver.found_solution.copy()
        
        self.gui = GUI(self.sudoku, self.solved_sudoku)



if __name__ == "__main__":
    app = MainCode()
    app.root.mainloop()
